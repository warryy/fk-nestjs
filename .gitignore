# .gitignore 文件遵循以下规范

# 所有空行或者以 # 开头的行都会被 Git 忽略。

# 可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。

# 匹配模式可以以（/）开头防止递归。

# 匹配模式可以以（/）结尾指定目录。

# 要忽略指定模式以外的文件或目录，可以在模式前加上叹号（!）取反。

# 其中所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。 遵守以下规范

# 星号（\*）匹配零个或多个任意字符；
# [abc] 匹配任何一个列在方括号中的字符 （这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；
# 问号（?）只匹配一个任意字符；
# 如果在方括号中使用短划线分隔两个字符， 表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）。
# 使用两个星号（//）表示匹配任意中间目录，比如 a/\*\*/z 可以匹配 a/z 、 a/b/z 或 a/b/c/z 等。

# compiled output
dist/
node_modules/
build/

# Logs
logs
*.log
npm-debug.log*
pnpm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# OS
.DS_Store/

# Tests
coverage/
.nyc_output

# IDEs and editors
.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# temp directory
.temp
.tmp

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
